


<<part1_setup, eval=include_part1>>=

source(paste0(root.dir,'./input/code/plot/plot_color.R'))

syb_part <- 1

## Part 1
colPart1 <- plot_colors(part = syb_part, 12)
col.main1 <- colPart1[["Main"]][1]
## color for the grid
col.main2 <- colPart1[["Main"]][2]

source(paste0(root.dir,"./input/code/plot/theme.R"))

nCol <- 5
colPart = plot_colors(part = syb_part, 12)
mapColFun = colorRampPalette(c("white", colPart[["Main"]][1]))
tmpCol = mapColFun(nCol)[2]
mapColFun = colorRampPalette(c(tmpCol, colPart[["Main"]][1]))
mapColors = mapColFun(nCol)

# map functions
source(paste0(root.dir,'./input/code/plot/map_categories.R'))
@


%    ___                                  _                   
%   / _ \  __   __   ___   _ __  __   __ (_)   ___  __      __
%  | | | | \ \ / /  / _ \ | '__| \ \ / / | |  / _ \ \ \ /\ / /
%  | |_| |  \ V /  |  __/ | |     \ V /  | | |  __/  \ V  V / 
%   \___/    \_/    \___| |_|      \_/   |_|  \___|   \_/\_/  
%                                                            



<<P1overTEXT, eval=P1over, short_text_ChartPage=P1over>>=
spread_title <- "Overview"
short_text <- "A combination of declining mortality rates, prolonged life expectancy and younger populations in regions with high fertility contributes to population growth in the world. While growth rates have been slowing since the late 1960s, the worldâ€™s population has nevertheless doubled since then, to over 7 billion people. Population growth is generally highest where income levels are low. This is especially true in cities. Since 2008, there have been more people living in cities than in rural areas."
@

<<P1overData,results='hide', cache=TRUE>>=
# Retrieve data
library(FAOSTAT)
dat <- getFAOtoSYB(domainCode = "OA",
                   elementCode = 551,
                   itemCode = 3010)
dat1 <- dat$aggregates
dat <- getFAOtoSYB(domainCode = "OA", 
                   elementCode = 561,
                   itemCode = 3010)
dat2 <- dat$aggregates
dat <- left_join(dat1,dat2)
df <- gather(dat, variable, value, 3:4)
@


<<P1overTOPRIGHT, eval=P1over, top_right_plot=P1over, fig.height=top_right_plot_height, fig.width=top_right_plot_width>>=

# old way

# Subset data
# if (region_to_report == "RAF") dat <- df[df$FAOST_CODE == 5100,]
# if (region_to_report == "RAP") dat <- df[df$FAOST_CODE == 5500,]
# if (region_to_report == "REU") dat <- df[df$FAOST_CODE == 5400,]
# if (region_to_report == "RNE") dat <- df[df$FAOST_CODE == 5300,]
# if (region_to_report == "GLO") dat <- df[df$FAOST_CODE == 5000,]
# if (region_to_report == "COF") dat <- df[df$FAOST_CODE == 5000,]
# 

dat <- df %>% select(FAOST_CODE,Year,variable,value)
dat <- join(dat,region_key)
dat <- dat[which(dat[[region_to_report]]),]

dat$variable <- as.character(dat$variable)
dat$variable[dat$variable == "OA_3010_551"] <- "Urban population"
dat$variable[dat$variable == "OA_3010_561"] <- "Rural population"

dat <- dat %>% group_by(Year,variable) %>%  summarise(value = sum(value, na.rm=TRUE)/1000000)

# print data for technical report
#datatable(dat)

# Draw the plot
p <- ggplot(dat, aes(x = Year, y = value))
p <- p + geom_area(aes(fill=variable), stat = "identity",position = "stack")
p <- p + scale_fill_manual(values=plot_colors(part = syb_part, 2)[["Sub"]])
p <- p + theme(axis.text.x = element_text(angle = 45))
p <- p + labs(x="",y="billion people")
p

# Caption

caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Africa rural and urban population"
if (region_to_report == "RAP") caption_text <- "Asia and Pacific rural and urban population"
if (region_to_report == "REU") caption_text <- "Europe and Central Asia rural and urban population"
if (region_to_report == "RNE") caption_text <- "North Africa and Near East rural and urban population"
if (region_to_report == "GLO") caption_text <- "World rural and urban population"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]
@


<<P1overLEFT, eval=P1over, left_plot=P1over, fig.height=left_plot_height, fig.width=left_plot_width>>=
# data
dat <- filter(syb.df, Year %in%
                   c(2004:2014)) %>% 
                  group_by(FAOST_CODE,SHORT_NAME) %>% 
                  dplyr::summarise(OA.TPBS.POP.PPL.GR10 = mean(OA.TPBS.POP.PPL.GR10, na.rm=TRUE))
dat <- ungroup(dat)
dat <- dat[!is.na(dat$OA.TPBS.POP.PPL.GR10),]
# Add region key and subset
dat <- join(dat,region_key)

dat <- dat[which(dat[[region_to_report]]),]

dat <- arrange(dat, -OA.TPBS.POP.PPL.GR10)
top10 <- dat %>% slice(1:10) %>% mutate(color = "Countries with highest values")
bot10 <- dat %>% slice( (nrow(dat)-9):nrow(dat)) %>% mutate(color = "Countries with lowest values")
dat_plot <- rbind(top10,bot10)

p <- ggplot(dat_plot, aes(x=reorder(SHORT_NAME, OA.TPBS.POP.PPL.GR10),y=OA.TPBS.POP.PPL.GR10))
p <- p + geom_point(aes(color=color),size = 3, alpha = 0.75)
p <- p + scale_color_manual(values=plot_colors(part = syb_part, 2)[["Sub"]])
p <- p + coord_flip()
p <- p + labs(x="",y="percent")
p <- p + guides(color = guide_legend(nrow = 2))
p

# Caption
caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Population, average annual growth (2004-2014)"
if (region_to_report == "RAP") caption_text <- "Population, average annual growth (2004-2014)"
if (region_to_report == "REU") caption_text <- "Population, average annual growth (2004-2014)"
if (region_to_report == "RNE") caption_text <- "Population, average annual growth (2004-2014)"
if (region_to_report == "GLO") caption_text <- "Population, average annual growth (2004-2014)"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]
@

<<P1overRIGHT, eval=P1over ,right_plot=P1over, fig.height=right_plot_height, fig.width=right_plot_width>>=

# data
dat <- syb.df %>% filter(Year %in% 2013) %>% select(FAOST_CODE,SP.DYN.LE00.IN)
dat <- dat[!is.na(dat$SP.DYN.LE00.IN),]

# Add region key and subset
dat <- join(dat,region_key)
dat <- dat[which(dat[[region_to_report]]),]

dat <- arrange(dat, -SP.DYN.LE00.IN)
top10 <- dat %>% slice(1:10) %>% mutate(color = "Countries with highest values")
bot10 <- dat %>% slice( (nrow(dat)-9):nrow(dat)) %>% mutate(color = "Countries with lowest values")
dat_plot <- rbind(top10,bot10)

p <- ggplot(dat_plot, aes(x=reorder(SHORT_NAME, SP.DYN.LE00.IN),y=SP.DYN.LE00.IN))
p <- p + geom_point(aes(color=color),size = 3, alpha = 0.75)
p <- p + scale_color_manual(values=plot_colors(part = syb_part, 2)[["Sub"]])
p <- p + coord_flip()
p <- p + labs(x="",y="percent")
p <- p + guides(color = guide_legend(nrow = 2))
p

# Caption
caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "RAP") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "REU") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "RNE") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "GLO") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]

@


<<P1overBOTTOM, eval=P1over, bottom_plot=P1over, fig.height=bottom_plot_height, fig.width=bottom_plot_width>>=
# data
dat <- syb.df %>% filter(Year %in% c(2000:2014)) %>% select(FAOST_CODE,Year,SHORT_NAME,OA.TEAPT.POP.PPL.NO)
dat <- dat[!is.na(dat$OA.TEAPT.POP.PPL.NO),]
dat <- dat[!is.na(dat$SHORT_NAME),]


# DEFAULT GROUPING
df <- subgrouping(region_to_report = region_to_report)

# merge data with the region info
dat <- merge(dat,df[c("FAOST_CODE","subgroup")],by="FAOST_CODE")

# AGREGATE
dat_plot <- dat %>% group_by(subgroup,Year) %>% summarise(OA.TEAPT.POP.PPL.NO = sum(OA.TEAPT.POP.PPL.NO, na.rm=TRUE)) %>% 
  mutate(OA.TEAPT.POP.PPL.NO = OA.TEAPT.POP.PPL.NO / 1000000)

p <- ggplot(dat_plot, aes(x=Year,y=OA.TEAPT.POP.PPL.NO,color=subgroup))
p <- p + geom_point() + geom_line()
p <- p + scale_color_manual(values=plot_colors(part = syb_part, length(unique(dat_plot$subgroup)))[["Sub"]])
p <- p + labs(x="",y="million people")
p <- p + guides(color = guide_legend(nrow = 2))
p

# Caption
caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Total economically active population in Africa (2000 to 2014)"
if (region_to_report == "RAP") caption_text <- "Total economically active population in Asia (2000 to 2014)"
if (region_to_report == "REU") caption_text <- "Total economically active population in Europe and Central Asia (2000 to 2014)"
if (region_to_report == "RNE") caption_text <- "Total economically active population in North Africa and Near East (2000 to 2014)"
if (region_to_report == "GLO") caption_text <- "Total economically active population in Asia (2000 to 2014)"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]
@


<<P1overMAP, eval=P1over, map_plot=P1over, fig.width=map.fig.width, fig.height= map.fig.height ,out.width=map.out.width, out.height=map.out.height, out.extra=map.out.extra>>=
dat <- syb.df %>% filter(Year %in% 2014, FAOST_CODE < 5000) %>% select(FAOST_CODE,SHORT_NAME,OA.TPR.POP.PPL.SHP)

map.plot <- left_join(dat,map.df)

# Add region key and subset

map.plot <- map.plot[which(map.plot[[region_to_report]]),]

cat_data <- map.plot[!duplicated(map.plot[c("FAOST_CODE")]),c("FAOST_CODE","OA.TPR.POP.PPL.SHP")]
cat_data$value_cat <- categories(x=cat_data$OA.TPR.POP.PPL.SHP, n=5, method="jenks")

map.plot <- left_join(map.plot,cat_data[c("FAOST_CODE","value_cat")])

# define map unit
map_unit <- "Percent"

# graticule
grat_robin <- spTransform(graticule, CRS("+proj=robin"))  # reproject graticule
gr_rob <- fortify(grat_robin)
# crop the grid
if (region_to_report != "GLO") {
  gr_rob <- gr_rob[gr_rob$lat >= min(map.plot$lat) & gr_rob$lat <= max(map.plot$lat),]
  gr_rob <- gr_rob[gr_rob$long >= min(map.plot$long) & gr_rob$long <= max(map.plot$long),]
} else gr_rob <- gr_rob

create_map_here()

# Caption
caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Rural population, share of total population (2014)"
if (region_to_report == "RAP") caption_text <- "Rural population, share of total population (2014)"
if (region_to_report == "REU") caption_text <- "Rural population, share of total population (2014)"
if (region_to_report == "RNE") caption_text <- "Rural population, share of total population (2014)"
if (region_to_report == "GLO") caption_text <- "Rural population, share of total population (2014)"
@


%   _____                                                    
%  | ____|   ___    ___    _ __     ___    _ __ ___    _   _ 
%  |  _|    / __|  / _ \  | '_ \   / _ \  | '_ ` _ \  | | | |
%  | |___  | (__  | (_) | | | | | | (_) | | | | | | | | |_| |
%  |_____|  \___|  \___/  |_| |_|  \___/  |_| |_| |_|  \__, |
%                                                      |___/ 
% 


<<P1econTEXT, eval=P1econ, short_text_ChartPage=P1econ>>=
spread_title <- "Economy"
short_text <- "While some sectors have been hard hit, agriculture has demonstrated resilience during the recent economic downturn.  Changes in the wider economy, including growing global integration, affect the performance of the agriculture sector.  Higher overall economic growth also raises consumersâ€™ incomes and hence food demand. Changing interest rates influence capital investments, land values and storage levels, while inflation affects input prices, revenues and credit costs. Fluctuations in exchange rates have an important bearing on international competitiveness and trade flows."
@

<<P1econTOPRIGHT, eval=P1econ, top_right_plot=P1econ, fig.height=top_right_plot_height, fig.width=top_right_plot_width>>=
dat <- filter(syb.df, Year %in% 2013) %>% select(FAOST_CODE,
                                                 NV.AGR.TOTL.ZS,
                                                 NV.IND.TOTL.ZS,
                                                 NV.SRV.TETC.ZS)

# Add region key and subset
dat <- join(dat,region_key)
dat <- dat[which(dat[[region_to_report]]),]

dat <- gather(dat, variable, value, 2:4)
dat$fill[dat$variable == "NV.AGR.TOTL.ZS"] <- "Agriculture"
dat$fill[dat$variable == "NV.IND.TOTL.ZS"] <- "Indurstry"
dat$fill[dat$variable == "NV.SRV.TETC.ZS"] <- "Services"


# DEFAULT GROUPING
df <- subgrouping(region_to_report = region_to_report)

# merge data with the region info
dat_plot <- merge(dat,df[c("FAOST_CODE","subgroup")],by="FAOST_CODE")

# AGREGATE
dat_plot <- dat_plot %>% group_by(subgroup,fill) %>% summarise(value  = mean(value, na.rm=TRUE)) %>% ungroup()

# reorder regions by the share of agricultural land
dat_plot$subgroup <- factor(dat_plot$subgroup,
                                  levels=arrange(dat_plot[dat_plot$fill == "Agriculture",],-value)$subgroup )

p <- ggplot(dat_plot, aes(x=subgroup, y=value, fill=fill))
p <- p + geom_bar(stat="identity", position="stack")
p <- p + scale_fill_manual(values=plot_colors(part = syb_part, 3)[["Sub"]])
p <- p + labs(x="",y="percent")
p <- p + theme(axis.text.x = element_text(angle=45))
p

# Caption
caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Value added in agriculture, industry and services, share of GDP (2013)"
if (region_to_report == "RAP") caption_text <- "Value added in agriculture, industry and services, share of GDP (2013)"
if (region_to_report == "REU") caption_text <- "Value added in agriculture, industry and services, share of GDP (2013)"
if (region_to_report == "RNE") caption_text <- "Value added in agriculture, industry and services, share of GDP (2013)"
if (region_to_report == "GLO") caption_text <- "Value added in agriculture, industry and services, share of GDP (2013)"
@


<<P1econLEFT, eval=P1econ, left_plot=P1econ, fig.height=left_plot_height, fig.width=left_plot_width>>=
dat <- syb.df[syb.df$Year %in%  2013 & syb.df$FAOST_CODE < 5000,c("FAOST_CODE","Year","SHORT_NAME","EA.PRD.AGRI.KD")]

dat <- dat[!is.na(dat$EA.PRD.AGRI.KD),]
# Add region key and subset
dat <- join(dat,region_key)

dat <- dat[dat$FAOST_CODE != 348,]
dat$SHORT_NAME[dat$FAOST_CODE == 351] <- "China"

#and subset
dat <- dat[which(dat[[region_to_report]]),]

# top for this plot
dat <- arrange(dat, -EA.PRD.AGRI.KD)
dat_plot <- dat %>% slice(1:20) %>% mutate(color = "2013")

p <- ggplot(dat_plot, aes(x=reorder(SHORT_NAME, EA.PRD.AGRI.KD),y=EA.PRD.AGRI.KD))
p <- p + geom_point(aes(color=color),size = 3, alpha = 0.75)
p <- p + scale_color_manual(values=plot_colors(part = syb_part, 1)[["Sub"]])
p <- p + theme(legend.position = "none") # hide legend as only one year plotted
p <- p + coord_flip()
p <- p + labs(x="",y="US$")
p <- p + guides(color = guide_legend(nrow = 2))
p

# Caption
if (region_to_report == "RAF") caption_text <- "Agriculture value added per worker, countries with the highest values"
if (region_to_report == "RAP") caption_text <- "Agriculture value added per worker, countries with the highest values"
if (region_to_report == "REU") caption_text <- "Agriculture value added per worker, countries with the highest values"
if (region_to_report == "RNE") caption_text <- "Agriculture value added per worker, countries with the highest values"
if (region_to_report == "GLO") caption_text <- "Agriculture value added per worker, countries with the highest values"

@

<<P1econRIGHT, eval=P1econ ,right_plot=P1econ, fig.height=right_plot_height, fig.width=right_plot_width>>=

# data
dat <- syb.df %>% filter(Year %in% c(2003:2013)) %>% select(FAOST_CODE,SHORT_NAME,Year,NV.AGR.TOTL.KD)
dat <- dat[!is.na(dat$NV.AGR.TOTL.KD),]
dat <- dat[!is.na(dat$SHORT_NAME),]
# Add region key and subset
dat <- join(dat,region_key)
dat <- dat[which(dat[[region_to_report]]),]

top10 <- dat %>% arrange(FAOST_CODE,Year) %>%  
              #mutate(Growth=NV.AGR.TOTL.KD/lag(NV.AGR.TOTL.KD)-1) %>% # dplyr_group does not give NA for first years of groups... hence
              ddply("FAOST_CODE",transform,Growth=c(NA,exp(diff(log(NV.AGR.TOTL.KD)))-1)) %>% 
              group_by(SHORT_NAME) %>% 
              dplyr::summarise(growth_NV.AGR.TOTL.KD = mean(Growth, na.rm = TRUE)*100) %>% 
              arrange(-growth_NV.AGR.TOTL.KD) %>% 
              slice(1:10) %>% 
              mutate(color = "Countries with highest values")

bot10 <- dat %>% arrange(FAOST_CODE,Year) %>%  
              #mutate(Growth=NV.AGR.TOTL.KD/lag(NV.AGR.TOTL.KD)-1) %>% # dplyr_group does not give NA for first years of groups... hence
              ddply("FAOST_CODE",transform,Growth=c(NA,exp(diff(log(NV.AGR.TOTL.KD)))-1)) %>% 
              group_by(SHORT_NAME) %>% 
              dplyr::summarise(growth_NV.AGR.TOTL.KD = mean(Growth, na.rm = TRUE)*100) %>% 
              arrange(growth_NV.AGR.TOTL.KD) %>% 
              slice(1:10) %>% 
              mutate(color = "Countries with lowest values")
dat_plot <- rbind(top10,bot10)
  
p <- ggplot(dat_plot, aes(x=reorder(SHORT_NAME, growth_NV.AGR.TOTL.KD),y=growth_NV.AGR.TOTL.KD))
p <- p + geom_point(aes(color=color),size = 3, alpha = 0.75)
p <- p + scale_color_manual(values=plot_colors(part = syb_part, 2)[["Sub"]])
p <- p + coord_flip()
p <- p + labs(x="",y="percent")
p <- p + guides(color = guide_legend(nrow = 2))
p

# Caption
caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "RAP") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "REU") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "RNE") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "GLO") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]

@


<<P1econBOTTOM_data, cache=TRUE>>=
# data
# Constant GDP from World Bank
library(WDI)
dl <- WDI(indicator = c("NY.GDP.MKTP.KD","iso3Code"), start=2000, end=2013)
names(dl)[names(dl)=="year"] <- "Year"
dl <- merge(dl,FAOcountryProfile[c("ISO2_WB_CODE","FAOST_CODE","UNSD_MACRO_REG_CODE","UNSD_SUB_REG_CODE")],
            by.x="iso2c",by.y="ISO2_WB_CODE",all.x=TRUE)
dl <- na.omit(dl)

# nominator from syb FAOSTAT
nomin <- syb.df[c("FAOST_CODE","SHORT_NAME","Year","NV.AGR.TOTL.KD")]
@



<<P1econBOTTOM, eval=P1econ, bottom_plot=P1econ, fig.height=bottom_plot_height, fig.width=bottom_plot_width>>=

# DEFAULT GROUPING
df <- subgrouping(region_to_report = region_to_report)

# merge data with the region info
dat <- merge(dl,df[c("FAOST_CODE","subgroup")],by="FAOST_CODE")

#dat_plot <- dat %>% group_by(subgroup,Year) %>% dplyr::summarise(constant_gdp = sum(NY.GDP.MKTP.KD,na.rm=TRUE))

dat <- merge(nomin,dat,by=c("FAOST_CODE","Year"))

dat_plot <- dat %>%  group_by(subgroup,Year) %>% 
    summarise(constant_gdp    = sum(NY.GDP.MKTP.KD,na.rm=TRUE),
              agr_value_added = sum(NV.AGR.TOTL.KD,na.rm=TRUE)) %>% 
    mutate(share = agr_value_added/constant_gdp*100) %>% 
    ungroup() %>%  
    arrange(-share)

p <- ggplot(data = dat_plot, aes(x = Year, y = share,group=subgroup,color=subgroup))
p <- p + geom_line()
p <- p + scale_color_manual(values = plot_colors(part = 1, length(unique(dat_plot$subgroup)))[["Sub"]])
p <- p + labs(y="percent", x="")
p <- p + guides(color = guide_legend(nrow = 2))
p

# Caption
caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Value added in agriculture as share of GDP"
if (region_to_report == "RAP") caption_text <- "Value added in agriculture as share of GDP"
if (region_to_report == "REU") caption_text <- "Value added in agriculture as share of GDP"
if (region_to_report == "RNE") caption_text <- "Value added in agriculture as share of GDP"
if (region_to_report == "GLO") caption_text <- "Value added in agriculture as share of GDP"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]

@


<<P1econMAP, eval=P1econ, map_plot=P1econ, fig.width=map.fig.width, fig.height= map.fig.height ,out.width=map.out.width, out.height=map.out.height, out.extra=map.out.extra>>=
dat <- syb.df %>% filter(Year %in% c(2010:2013), FAOST_CODE < 5000) %>%
                select(FAOST_CODE,SHORT_NAME,NV.AGR.TOTL.ZS) %>%
                group_by(FAOST_CODE) %>% dplyr::summarise(NV.AGR.TOTL.ZS = max(NV.AGR.TOTL.ZS)) %>% 
                ungroup()

map.plot <- left_join(dat,map.df)

# Add region key and subset

map.plot <- map.plot[which(map.plot[[region_to_report]]),]

cat_data <- map.plot[!duplicated(map.plot[c("FAOST_CODE")]),c("FAOST_CODE","NV.AGR.TOTL.ZS")]
cat_data$value_cat <- categories(x=cat_data$NV.AGR.TOTL.ZS, n=5, method="jenks")

map.plot <- left_join(map.plot,cat_data[c("FAOST_CODE","value_cat")])

# define map unit
map_unit <- "Percent"

# graticule
grat_robin <- spTransform(graticule, CRS("+proj=robin"))  # reproject graticule
gr_rob <- fortify(grat_robin)
# crop the grid
if (region_to_report != "GLO") {
  gr_rob <- gr_rob[gr_rob$lat >= min(map.plot$lat) & gr_rob$lat <= max(map.plot$lat),]
  gr_rob <- gr_rob[gr_rob$long >= min(map.plot$long) & gr_rob$long <= max(map.plot$long),]
} else gr_rob <- gr_rob

create_map_here()

# Caption
caption_text <- "This is the default caption if no region spesific is defined"
if (region_to_report == "RAF") caption_text <- "Value added in agriculture, share of GDP (percent, 2010 to 2013*)"
if (region_to_report == "RAP") caption_text <- "Value added in agriculture, share of GDP (percent, 2010 to 2013*)"
if (region_to_report == "REU") caption_text <- "Value added in agriculture, share of GDP (percent, 2010 to 2013*)"
if (region_to_report == "RNE") caption_text <- "Value added in agriculture, share of GDP (percent, 2010 to 2013*)"
if (region_to_report == "GLO") caption_text <- "Value added in agriculture, share of GDP (percent, 2010 to 2013*)"
@





%   _               _                            
%  | |       __ _  | |__     ___    _   _   _ __ 
%  | |      / _` | | '_ \   / _ \  | | | | | '__|
%  | |___  | (_| | | |_) | | (_) | | |_| | | |   
%  |_____|  \__,_| |_.__/   \___/   \__,_| |_|   
%                                               








%   ___                           _         
%  |_ _|  _ __    _ __    _   _  | |_   ___ 
%   | |  | '_ \  | '_ \  | | | | | __| / __|
%   | |  | | | | | |_) | | |_| | | |_  \__ \
%  |___| |_| |_| | .__/   \__,_|  \__| |___/
%                |_|                       
%                
               









%   ___                                _                                _   
%  |_ _|  _ __   __   __   ___   ___  | |_   _ __ ___     ___   _ __   | |_ 
%   | |  | '_ \  \ \ / /  / _ \ / __| | __| | '_ ` _ \   / _ \ | '_ \  | __|
%   | |  | | | |  \ V /  |  __/ \__ \ | |_  | | | | | | |  __/ | | | | | |_ 
%  |___| |_| |_|   \_/    \___| |___/  \__| |_| |_| |_|  \___| |_| |_|  \__|
%                                                                           

                                                                          


               

