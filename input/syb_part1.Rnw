


<<part1_setup>>=
library(dplyr)
library(magrittr)
library(xtable)
library(lazyeval)
library(tidyr)
library(stringr)
library(scales)
library(ggplot2)
library(grid)
library(DT)
library(gisfao)


source(paste0(root.dir,'./input/code/plot/plot_color.R'))

## Part 1
colPart1 <- plot_colors(part = 1, 12)
col.main1 <- colPart1[["Main"]][1]
## color for the grid
col.main2 <- colPart1[["Main"]][2]

source(paste0(root.dir,"./input/code/plot/theme.R"))

# region_key
region_key <- fao_world@data[c("FAOST_CODE","RAF","LAC","RAP","REU","RNE")]

# map functions
source(paste0(root.dir,'./input/code/plot/map_categories.R'))
@


%    ___                                  _                   
%   / _ \  __   __   ___   _ __  __   __ (_)   ___  __      __
%  | | | | \ \ / /  / _ \ | '__| \ \ / / | |  / _ \ \ \ /\ / /
%  | |_| |  \ V /  |  __/ | |     \ V /  | | |  __/  \ V  V / 
%   \___/    \_/    \___| |_|      \_/   |_|  \___|   \_/\_/  
%                                                            



<<P1overTEXT, eval=P1over, text_chunk=P1over>>=
spread_title <- "Overview"
short_text <- "A combination of declining mortality rates, prolonged life expectancy and younger populations in regions with high fertility contributes to population growth in the world. While growth rates have been slowing since the late 1960s, the worldâ€™s population has nevertheless doubled since then, to over 7 billion people. Population growth is generally highest where income levels are low. This is especially true in cities. Since 2008, there have been more people living in cities than in rural areas."
@

<<P1overData,results='hide'>>=
# Retrieve data
library(FAOSTAT)
dat <- getFAOtoSYB(domainCode = "OA",
                   elementCode = 551,
                   itemCode = 3010)
dat1 <- dat$aggregates
dat <- getFAOtoSYB(domainCode = "OA", 
                   elementCode = 561,
                   itemCode = 3010)
dat2 <- dat$aggregates
dat <- left_join(dat1,dat2)
dat <- gather(dat, variable, value, 3:4)
@


<<P1overTOPRIGHT, eval=P1over, top_right_chunk=P1over, fig.height=2.5, fig.width=3>>=

# Subset data
if (region_to_report == "RAF") dat <- dat[dat$FAOST_CODE == 5100,]
if (region_to_report == "RAP") dat <- dat[dat$FAOST_CODE == 5500,]
if (region_to_report == "REU") dat <- dat[dat$FAOST_CODE == 5205,]
if (region_to_report == "RNE") dat <- dat[dat$FAOST_CODE == 5300,]
if (region_to_report == "GLO") dat <- dat[dat$FAOST_CODE == 5000,]
if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]


dat$variable <- as.character(dat$variable)
dat$variable[dat$variable == "OA_3010_551"] <- "Urban population"
dat$variable[dat$variable == "OA_3010_561"] <- "Rural population"

dat$value <- dat$value / 1000000

# print data for technical report
#datatable(dat)

# Draw the plot
p <- ggplot(dat, aes(x = Year, y = value))
p <- p + geom_area(aes(fill=variable), stat = "identity",position = "stack")
p <- p + scale_fill_manual(values=plot_colors(part = 1, 2)[["Sub"]])
p <- p + theme(axis.text.x = element_text(angle = 45))
p <- p + labs(x="",y="billion people")
p

# Caption

if (region_to_report == "RAF") caption_text <- "Africa rural and urban population"
if (region_to_report == "RAP") caption_text <- "Asia and Pacific rural and urban population"
if (region_to_report == "REU") caption_text <- "Europe and Central Asia rural and urban population"
if (region_to_report == "RNE") caption_text <- "North Africa and Near East rural and urban population"
if (region_to_report == "GLO") caption_text <- "World rural and urban population"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]
@


<<P1overLEFT, eval=P1over, left_chunk=P1over, fig.height=5.9, fig.width=3.2>>=
# data
dat <- filter(syb.df, Year %in%
                   c(2004:2014)) %>% 
                  group_by(FAOST_CODE,SHORT_NAME) %>% 
                  dplyr::summarise(OA.TPBS.POP.PPL.GR10 = mean(OA.TPBS.POP.PPL.GR10, na.rm=TRUE))
dat <- ungroup(dat)
dat <- dat[!is.na(dat$OA.TPBS.POP.PPL.GR10),]
# Add region key and subset
dat <- join(dat,region_key)
if (region_to_report == "RAF") dat <- dat[which(dat$RAF),]
if (region_to_report == "RAP") dat <- dat[which(dat$RAP),]
if (region_to_report == "REU") dat <- dat[which(dat$REU),]
if (region_to_report == "RNE") dat <- dat[which(dat$RNE),]
if (region_to_report == "GLO") dat <- dat
if (region_to_report == "COF") dat <- dat

dat <- arrange(dat, -OA.TPBS.POP.PPL.GR10)
top10 <- dat %>% slice(1:10) %>% mutate(color = "Countries with highest values")
bot10 <- dat %>% slice( (nrow(dat)-9):nrow(dat)) %>% mutate(color = "Countries with lowest values")
dat_plot <- rbind(top10,bot10)

p <- ggplot(dat_plot, aes(x=reorder(SHORT_NAME, OA.TPBS.POP.PPL.GR10),y=OA.TPBS.POP.PPL.GR10))
p <- p + geom_point(aes(color=color),size = 3, alpha = 0.75)
p <- p + scale_color_manual(values=plot_colors(part = 1, 2)[["Sub"]])
p <- p + coord_flip()
p <- p + labs(x="",y="percent")
p

# Caption
if (region_to_report == "RAF") caption_text <- "Population, average annual growth (2004-2014)"
if (region_to_report == "RAP") caption_text <- "Population, average annual growth (2004-2014)"
if (region_to_report == "REU") caption_text <- "Population, average annual growth (2004-2014)"
if (region_to_report == "RNE") caption_text <- "Population, average annual growth (2004-2014)"
if (region_to_report == "GLO") caption_text <- "Population, average annual growth (2004-2014)"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]
@

<<P1overRIGHT, eval=P1over ,right_chunk=P1over, fig.height=5.9, fig.width=3.2>>=

# data
dat <- syb.df %>% filter(Year %in% 2013) %>% select(FAOST_CODE,SHORT_NAME,SP.DYN.LE00.IN)
dat <- dat[!is.na(dat$SP.DYN.LE00.IN),]
dat <- dat[!is.na(dat$SHORT_NAME),]
# Add region key and subset
dat <- join(dat,region_key)
if (region_to_report == "RAF") dat <- dat[which(dat$RAF),]
if (region_to_report == "RAP") dat <- dat[which(dat$RAP),]
if (region_to_report == "REU") dat <- dat[which(dat$REU),]
if (region_to_report == "RNE") dat <- dat[which(dat$RNE),]
if (region_to_report == "GLO") dat <- dat
if (region_to_report == "COF") dat <- dat

dat <- arrange(dat, -SP.DYN.LE00.IN)
top10 <- dat %>% slice(1:10) %>% mutate(color = "Countries with highest values")
bot10 <- dat %>% slice( (nrow(dat)-9):nrow(dat)) %>% mutate(color = "Countries with lowest values")
dat_plot <- rbind(top10,bot10)

p <- ggplot(dat_plot, aes(x=reorder(SHORT_NAME, SP.DYN.LE00.IN),y=SP.DYN.LE00.IN))
p <- p + geom_point(aes(color=color),size = 3, alpha = 0.75)
p <- p + scale_color_manual(values=plot_colors(part = 1, 2)[["Sub"]])
p <- p + coord_flip()
p <- p + labs(x="",y="percent")
p

# Caption
if (region_to_report == "RAF") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "RAP") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "REU") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "RNE") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
if (region_to_report == "GLO") caption_text <- "Life expectancy at birth, countries with the highest and lowest values (2013)"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]

@


<<P1overBOTTOM, eval=P1over, bottom_chunk=P1over, fig.height=3, fig.width=6>>=
# data
dat <- syb.df %>% filter(Year %in% c(2000:2014),
                         FAOST_CODE >= 5000) %>% select(FAOST_CODE,Year,FAO_TABLE_NAME,OA.TEAPT.POP.PPL.NO)
dat <- dat[!is.na(dat$OA.TEAPT.POP.PPL.NO),]
dat <- dat[!is.na(dat$FAO_TABLE_NAME),]
# Add region key and subset
#dat <- join(dat,region_key)
if (region_to_report == "RAF") dat <- filter(dat, FAOST_CODE %in% c(5101,5102,5103,5104,5105))
if (region_to_report == "RAP") dat <- filter(dat, FAOST_CODE %in% c(5301,5302,5303,5304,5305))
if (region_to_report == "REU") dat <- filter(dat, FAOST_CODE %in% c(5401,5402,5403,5404,5301))
if (region_to_report == "RNE") dat <- filter(dat, FAOST_CODE %in% c(5103,5101))
if (region_to_report == "GLO") dat <- filter(dat, FAOST_CODE %in% c(5301,5302,5303,5304,5305))
if (region_to_report == "COF") dat <- dat

# remove duplicates
dat <- dat[!duplicated(dat[c("FAO_TABLE_NAME","Year")]),]

dat$OA.TEAPT.POP.PPL.NO <- dat$OA.TEAPT.POP.PPL.NO / 1000000

dat_plot <- dat

p <- ggplot(dat_plot, aes(x=Year,y=OA.TEAPT.POP.PPL.NO,color=FAO_TABLE_NAME))
p <- p + geom_point() + geom_line()
p <- p + scale_color_manual(values=plot_colors(part = 1, 6)[["Sub"]])
p <- p + labs(x="",y="million people")
p

# Caption
if (region_to_report == "RAF") caption_text <- "Total economically active population in Africa (2000 to 2014)"
if (region_to_report == "RAP") caption_text <- "Total economically active population in Asia (2000 to 2014)"
if (region_to_report == "REU") caption_text <- "Total economically active population in Europe and Central Asia (2000 to 2014)"
if (region_to_report == "RNE") caption_text <- "Total economically active population in North Africa and Near East (2000 to 2014)"
if (region_to_report == "GLO") caption_text <- "Total economically active population in Asia (2000 to 2014)"
#if (region_to_report == "COF") dat <- dat[dat$FAOST_CODE == 5000,]
@


<<P1overMAP, eval=P1over, map_chunk=P1over, fig.width= if (region_to_report == "RAF") 6 else 15, fig.height= if (region_to_report == "RAF") 12 else 8,out.width= if (region_to_report == "RAF") "1\\columnwidth" else "2\\columnwidth", out.extra= if (region_to_report != "RAF") 'angle=90' else 'angle=0' ,fig.align= "center">>=
# out.width= if (region_to_report == "RAF") "1\\columnwidth" else "2\\columnwidth"
# fig.width= if (region_to_report != "RAF") 15 else 8, fig.height= if (region_to_report != "RAF") 8 else 15,
dat <- syb.df %>% filter(Year %in% 2014) %>% select(FAOST_CODE,SHORT_NAME,OA.TPR.POP.PPL.SHP)

# set Robinson projection
shape <- spTransform(fao_world, CRS("+proj=robin"))

# Fortify the shape
shape$id <- rownames(shape@data)
map.points <- fortify(shape, region = "id")
map.df <- merge(map.points, shape, by = "id")

map.df <- left_join(dat,map.df)

# Add region key and subset

if (region_to_report == "RAF") map.df <- map.df[which(map.df$RAF),]
if (region_to_report == "RAP") map.df <- map.df[which(map.df$RAP),]
if (region_to_report == "REU") map.df <- map.df[which(map.df$REU),]
if (region_to_report == "RNE") map.df <- map.df[which(map.df$RNE),]
if (region_to_report == "GLO") map.df <- map.df
if (region_to_report == "COF") map.df <- map.df

cat_data <- map.df[!duplicated(map.df[c("FAOST_CODE")]),c("FAOST_CODE","OA.TPR.POP.PPL.SHP")]
cat_data$value_cat <- categories(cat_data$OA.TPR.POP.PPL.SHP)
  
map.df <- left_join(map.df,cat_data[c("FAOST_CODE","value_cat")])

# define map unit
map_unit <- "Percent"

nCol=5

colPart = plot_colors(part = 1, 12)
mapColFun = colorRampPalette(c("white", colPart[["Main"]][1]))
tmpCol = mapColFun(nCol)[2]
mapColFun = colorRampPalette(c(tmpCol, colPart[["Main"]][1]))
mapColors = mapColFun(nCol)


# graticule
grat_robin <- spTransform(graticule, CRS("+proj=robin"))  # reproject graticule
gr_rob <- fortify(grat_robin)
# crop the grid
if (region_to_report != "GLO") {
  gr_rob <- gr_rob[gr_rob$lat >= min(map.df$lat) & gr_rob$lat <= max(map.df$lat),]
  gr_rob <- gr_rob[gr_rob$long >= min(map.df$long) & gr_rob$long <= max(map.df$long),]
} else gr_rob <- gr_rob

# Create the plot
p <- ggplot(data=map.df, aes(long,lat,group=group))
#  ---- grid below the countries ------------------------
p <- p + geom_path(data = gr_rob, aes(long, lat, group = group, fill = NULL), 
              linetype = "solid", color = col.main2, size = 0.001)
# Grey for the non-data regions
p <- p + geom_path(data = gr_rob, aes(long, lat, group = group, fill = NULL), linetype = "solid", color = "Dim Grey", size = .5)
p <- p + geom_polygon(data = map.df, aes(long,lat),fill=NA,colour="white",size = .7)
p <- p + geom_polygon(aes(fill = value_cat),colour="white",size=.2)
#p <- p + scale_fill_manual(values=c("Dim Grey","#edf8fb","#b2e2e2","#66c2a4","#2ca25f","#006d2c")) 
p <- p + scale_fill_manual(values=mapColors) # no data to think about
p <- p + theme(legend.position = c(0.05,0.05), 
                          legend.justification=c(0,0),
                          legend.key.size=unit(6,'mm'),
                          legend.direction = "vertical",
                          legend.background=element_rect(colour=NA, fill=alpha("white", 2/3)),
                          legend.text=element_text(size=12), 
                          legend.title=element_text(size=12), 
                          title=element_text(size=16), 
                          panel.background = element_blank(), 
                          plot.background = element_blank(),
                          panel.grid.minor = element_blank(),
                          panel.grid.major = element_blank(),
                          axis.text = element_blank(), 
                          axis.title = element_blank(), 
                          axis.ticks = element_blank())
p <- p + guides(fill = guide_legend(title = map_unit,
                                     title.position = "top", 
                                     title.hjust=0))
p

# Caption
if (region_to_report == "RAF") caption_text <- "Rural population, share of total population (2014)"
if (region_to_report == "RAP") caption_text <- "Rural population, share of total population (2014)"
if (region_to_report == "REU") caption_text <- "Rural population, share of total population (2014)"
if (region_to_report == "RNE") caption_text <- "Rural population, share of total population (2014)"
if (region_to_report == "GLO") caption_text <- "Rural population, share of total population (2014)"
@


%   _____                                                    
%  | ____|   ___    ___    _ __     ___    _ __ ___    _   _ 
%  |  _|    / __|  / _ \  | '_ \   / _ \  | '_ ` _ \  | | | |
%  | |___  | (__  | (_) | | | | | | (_) | | | | | | | | |_| |
%  |_____|  \___|  \___/  |_| |_|  \___/  |_| |_| |_|  \__, |
%                                                      |___/ 
% 








%   _               _                            
%  | |       __ _  | |__     ___    _   _   _ __ 
%  | |      / _` | | '_ \   / _ \  | | | | | '__|
%  | |___  | (_| | | |_) | | (_) | | |_| | | |   
%  |_____|  \__,_| |_.__/   \___/   \__,_| |_|   
%                                               








%   ___                           _         
%  |_ _|  _ __    _ __    _   _  | |_   ___ 
%   | |  | '_ \  | '_ \  | | | | | __| / __|
%   | |  | | | | | |_) | | |_| | | |_  \__ \
%  |___| |_| |_| | .__/   \__,_|  \__| |___/
%                |_|                       
%                
               









%   ___                                _                                _   
%  |_ _|  _ __   __   __   ___   ___  | |_   _ __ ___     ___   _ __   | |_ 
%   | |  | '_ \  \ \ / /  / _ \ / __| | __| | '_ ` _ \   / _ \ | '_ \  | __|
%   | |  | | | |  \ V /  |  __/ \__ \ | |_  | | | | | | |  __/ | | | | | |_ 
%  |___| |_| |_|   \_/    \___| |___/  \__| |_| |_| |_|  \___| |_| |_|  \__|
%                                                                           

                                                                          


               

