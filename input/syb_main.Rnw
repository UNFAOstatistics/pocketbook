%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Global Statistical Pocketbook 2015
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%   _          _ _             _                 _        
%  | | ___ __ (_) |_ _ __     | |__   ___   ___ | | _____ 
%  | |/ / '_ \| | __| '__|____| '_ \ / _ \ / _ \| |/ / __|
%  |   <| | | | | |_| | |_____| | | | (_) | (_) |   <\__ \
%  |_|\_\_| |_|_|\__|_|       |_| |_|\___/ \___/|_|\_\___/
%                                                         



% Asetetaan koko raportin laajuiset parametrit knitr:lle


<<knitr_setup, echo=FALSE, message=FALSE, warning=FALSE, results='hide'>>=

library(knitr)
options(scipen = 999)

#pdf.options(useDingbats = TRUE)

knit_hooks$set(chunk = function(x, options) x) # do not wrap output in kframe

syb_pdf = function(file, width, height) {
  pdf(file, width = width, height = height, pointsize = 10, family = "PT Sans")
}


opts_chunk$set(list(echo=FALSE,
                    eval=TRUE,
                    cache=FALSE,
                    warning=FALSE,
                    message=FALSE,
                    cache.path="~/fao_cache/regional15/",
                     dev="syb_pdf",
                     fig.ext='pdf',
                    results='asis')
               )

# Why we have to short_text_ChartPage and short_text_ChartPage2 hooks etc......

knit_hooks$set(short_text_ChartPage = function(before, options, envir) {
  
  # challenge with hooks was that when eval=FALSE hook was still executed and produced error
  # Added the following line for each hook that stops the function IF there is FALSE in eval either
  # written directly or passed through the spread condition region gadget thing..
  
  if (options$short_text_ChartPage == FALSE) return()
  # Set fig size
  fig.width  =  3
  fig.height =  10
     if (!before) {
       return(paste0("\\begin{ChartPage}{ ",spread_title," } \n",
               "\\LeftText{",short_text,"} \n"))
     }
})

knit_hooks$set(short_text_ChartPage2 = function(before, options, envir) {
  
  # challenge with hooks was that when eval=FALSE hook was still executed and produced error
  # Added the following line for each hook that stops the function IF there is FALSE in eval either
  # written directly or passed through the spread condition region gadget thing..
  
  if (options$short_text_ChartPage2 == FALSE) return()
  # Set fig size
  fig.width  =  3
  fig.height =  10
     if (!before) {
       return(paste0("\\begin{ChartPage2}{ ",spread_title," } \n",
               "\\LeftText{",short_text,"} \n"))
     }
})


knit_hooks$set(top_right_plot = function(before, options, envir) {
  
     if (options$top_right_plot == FALSE) return()
     
  if (before) {
       return("\\RightText{\\begin{chart} \n")
     } else {

      return(paste0("\\caption{",caption_text,"}","\\end{chart}} \n"))
    }
})


knit_hooks$set(top_right_minitable = function(before, options, envir) {
  
     if (options$top_right_minitable == FALSE) return()
     
  if (before) {
       return("\\RightText{ \n")
     } else {

      return(paste0("} \n"))
    }
})



knit_hooks$set(left_plot = function(before, options, envir) {

  if (options$left_plot == FALSE) return()
     if (before) {
       return("\\LeftChart{\\begin{chart} \n")
     } else {
       
      return(paste0("\\caption{",caption_text,"}","\\end{chart}} \n"))
    }
})

knit_hooks$set(right_plot = function(before, options, envir) {
  
  if (options$right_plot == FALSE) return()
     if (before) {
       return("\\RightChart{\\begin{chart} \n")
     } else {
       
      return(paste0("\\caption{",caption_text,"}","\\end{chart}} \n"))
    }
})

knit_hooks$set(bottom_plot = function(before, options, envir) {
  
  if (options$bottom_plot == FALSE) return()
     if (before) {
       return("\\BottomChart{\\begin{chart} \n")
     } else {
       
      return(paste0("\\caption{",caption_text,"}","\\end{chart}} \n \\end{ChartPage}"))
    }
})


knit_hooks$set(bottom_plot2 = function(before, options, envir) {
  
  if (options$bottom_plot2 == FALSE) return()
     if (before) {
       return("\\BottomChart{\\begin{chart} \n")
     } else {
       
      return(paste0("\\caption{",caption_text,"}","\\end{chart}} \n \\end{ChartPage2}"))
    }
})



# knit_hooks$set(end_chunk = function(before, options, envir) {
#   
#      if (!before) {
#        return("\\end{ChartPage}")
#     }
# 
# })

knit_hooks$set(map_plot = function(before, options, envir) {
  
  if (options$map_plot == FALSE) return()
     if (before) {
       return("\\begin{figure} \n")
     } else {
       
      return(paste0("\\caption{",caption_text,"} \n","\\end{figure}"))
    }

})

# remove all the kframe tags from all chunk outputs (as we are placing outputs in custom environments already!)
local({
  hook_chunk = knit_hooks$get('chunk')
  knit_hooks$set(chunk = function(x, options) {
    x = hook_chunk(x, options)
    #if (options$results == 'asis' && !options$echo && options$fig.num == 0) {
    if (options$results == 'asis') {
      # remove all kframe's
      gsub('\\\\(begin|end)\\{kframe\\}', '', x)
    } else x
  })
})





@


% 
%          _         _                                                _                   
%   _ __  | |  ___  | |_   _ __    __ _  _ __  __ _  _ __ ___    ___ | |_  ___  _ __  ___ 
%  | '_ \ | | / _ \ | __| | '_ \  / _` || '__|/ _` || '_ ` _ \  / _ \| __|/ _ \| '__|/ __|
%  | |_) || || (_) || |_  | |_) || (_| || |  | (_| || | | | | ||  __/| |_|  __/| |   \__ \
%  | .__/ |_| \___/  \__| | .__/  \__,_||_|   \__,_||_| |_| |_| \___| \__|\___||_|   |___/
%  |_|                    |_|                                                             
% 



<<syb_parameters, echo=FALSE, message=FALSE, warning=FALSE, results='hide'>>=

# if (region_to_report == "GLO"){
#   print_overview_map <- FALSE
#   } else print_overview_map <- TRUE


top_right_plot_height <- 2.5
top_right_plot_width  <- 3

left_plot_height  <- 6
left_plot_width  <- 3.2

right_plot_height <- 6
right_plot_width <- 3.2

bottom_plot_height <- 3
bottom_plot_width  <- 6

# defaults
map.fig.width   <- NULL
map.fig.height  <- NULL
map.out.height  <- NULL
map.out.width   <- NULL
map.out.extra   <- NULL


# RAF

if (region_to_report == "RAF") map.fig.width  <- 6
if (region_to_report == "RAF") map.fig.height  <- 8
if (region_to_report == "RAF") map.out.height  <- "1.5\\columnwidth"
if (region_to_report == "RAF") map.out.extra  <- 'angle=0'

# RAP

if (region_to_report == "RAP") map.fig.width  <- 12
if (region_to_report == "RAP") map.fig.height  <- 8
if (region_to_report == "RAP") map.out.width  <- "1.7\\columnwidth"
if (region_to_report == "RAP") map.out.extra  <- 'angle=90'

# REU

if (region_to_report == "REU") map.fig.width  <- 12
if (region_to_report == "REU") map.fig.height  <- 6
if (region_to_report == "REU") map.out.width  <- "2\\columnwidth"
if (region_to_report == "REU") map.out.extra  <- 'angle=90'

# RNE

if (region_to_report == "RNE") map.fig.width  <- 7
if (region_to_report == "RNE") map.fig.height  <- 4
if (region_to_report == "RNE") map.out.height  <- ".6\\columnwidth"
if (region_to_report == "RNE") map.out.extra  <- 'angle=0'

# GLO

if (region_to_report == "GLO") map.fig.width  <- 12
if (region_to_report == "GLO") map.fig.height  <- 8
if (region_to_report == "GLO") map.out.width  <- "1.7\\columnwidth"
if (region_to_report == "GLO") map.out.extra  <- 'angle=90'

if (region_to_report == "COF") 
if (region_to_report == "COF") 
if (region_to_report == "COF") 
if (region_to_report == "COF") map.out.extra  <- 'angle=90'


# Fortify the global map for each maps!!

# set Robinson projection
shape <- spTransform(fao_world, CRS("+proj=robin"))

# Fortify the shape
shape$id <- rownames(shape@data)
map.points <- fortify(shape, region = "id")
map.df <- merge(map.points, shape, by = "id")
map.df$FAOST_CODE[map.df$FAOST_CODE %in% 41] <- 351


# Function for subgroups

subgrouping <- function(region_to_report){
  df <- region_key[c("FAOST_CODE","SHORT_NAME",names(region_key)[grep(region_to_report, names(region_key))])]
  df <- df[which(df[[region_to_report]]),]
  df$subgroup <- NA
  for (var in names(df)[grep(paste0(region_to_report,"_"), names(df))]) {
    for(t in unique(df[[var]])) {
      df$subgroup <- ifelse(df[[var]],var,df$subgroup)
    }
  }
  df$subgroup <- str_replace_all(df$subgroup, paste0(region_to_report,"_"), "")
  df$subgroup <- str_replace_all(df$subgroup, "_", " ")
  
  if (region_to_report == "RNE") {
    df$subgroup[df$subgroup %in% "Gulf Cooperation Council States and Yemen"] <- "Gulf Cooperation\nCouncil States\nand Yemen"
    df$subgroup[df$subgroup %in% "Other Near East countries"] <- "Other Near East\ncountries"
  }
  
  df[c("FAOST_CODE","subgroup")]
}






# function plotting maps!

create_map_here <- function(){

  colPart = plot_colors(part = syb_part, 12)
  mapColFun = colorRampPalette(c("white", colPart[["Main"]][1]))
  
  if ("No Data" %in% unique(cat_data$value_cat)) {
    nCol = length(levels(cat_data$value_cat)) -1
    tmpCol = mapColFun(nCol)[2]
    mapColFun = colorRampPalette(c(tmpCol, colPart[["Main"]][1]))
    mapColors = mapColFun(nCol)
    mapColors <- c("grey70", mapColors)
  } 
  if (!("No Data" %in% unique(cat_data$value_cat))){
    nCol = length(levels(cat_data$value_cat))
    tmpCol = mapColFun(nCol)[2]
    mapColFun = colorRampPalette(c(tmpCol, colPart[["Main"]][1]))
    mapColors = mapColFun(nCol)
  }


  # Create the plot
p <- ggplot(data=map.plot, aes(long,lat,group=group))
#  ---- grid below the countries ------------------------
p <- p + geom_path(data = gr_rob, aes(long, lat, group = group, fill = NULL), 
              linetype = "solid", color = col.main2, alpha=.1)
# Grey for the non-data regions
p <- p + geom_polygon(aes(fill = value_cat), colour = NA)
p <- p + geom_polygon(fill=NA,colour = alpha("white", 1/2), size=.4, guide = FALSE)
p <- p + scale_fill_manual(values=mapColors) # no data to think about
p <- p + theme(legend.position = c(0.05,0.05), 
                          legend.justification=c(0,0),
                          legend.key.size=unit(6,'mm'),
                          legend.direction = "vertical",
                          legend.background=element_rect(colour=NA, fill=alpha("white", 1/3)),
                          #legend.background=element_rect(colour=NA, fill=NA),
                          legend.text=element_text(size=12), 
                          legend.title=element_text(size=12), 
                          title=element_text(size=16), 
                          panel.background = element_blank(), 
                          plot.background = element_blank(),
                          panel.grid.minor = element_blank(),
                          panel.grid.major = element_blank(),
                          axis.text = element_blank(), 
                          axis.title = element_blank(), 
                          axis.ticks = element_blank())
if (region_to_report == "REU") p <- p + coord_cartesian(xlim=c(-4290114,13198767,ylim=c(1965387,8184223)))
if (region_to_report == "RNE") p <- p + coord_cartesian(xlim=c(-4078415,1783566,ylim=c(29258,6247852)))
p <- p + guides(fill = guide_legend(title = map_unit, family="PT Sans",
                                     title.position = "top", 
                                     title.hjust=0))
p <- p + guides(colour=FALSE)
p
}


# require(devtools)
# if (!"FAOSTAT" %in% installed.packages()) {
#   install_github(username = "mkao006", repo = "FAOSTATpackage",
#                  ref = "master", subdir = "FAOSTAT")
# }
# # if (!"FAOSYB" %in% installed.packages()) {
# #   install_github(username = "mkao006", repo = "FAOSYBpackage",
# #                  ref = "master", subdir = "FAOSYB")
# # }
# require(FAOSTAT)
#require(FAOSYB)
#require(zoo)
#require(packrat)

# 
# ## -- Sourcings Complementaty scripts from database folder.
# 
# construction_functions = list.files(c("./Rcode/construction_functions/"), pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
# debug_functions        = list.files(c("./Rcode/debug_functions/"), pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
# misc                   = list.files(c("./Rcode/misc/"), pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
# plot_functions         = list.files(c("./Rcode/plot_functions/"), pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
# table_functions        = list.files(c("./Rcode/table_functions/"), pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
# text_functions         = list.files(c("./Rcode/text_functions/"), pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
# theme_functions        = list.files(c("./Rcode/theme_functions/"), pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
# 
# # Source sanitizeToLatex before
# source(plot_functions[11])
# source(table_functions[4])
# source(theme_functions[2])
# source(theme_functions[1])
# 
# scripts_to_source <- c(construction_functions,
#                          debug_functions,
#                          #misc,
#                          plot_functions,
#                          table_functions,
#                          #text_functions,
#                          theme_functions)
# 
# # A nested for loop for sourcing all the scripts
# 
# for (i in 1:length(scripts_to_source)){
#     source(scripts_to_source[i], encoding = "UTF-8")
# }

@



%% Global Pocket Yearbook class
% \documentclass[print, Draft]{faofactbook}
%\documentclass[print]{faofactbook}
%\documentclass[web, Draft]{faofactbook}
\documentclass[twoside,web]{faofactbook}

%% Other packages to be loaded
\usepackage{lipsum,textcomp}
\usepackage[T1]{fontenc}
\usepackage[utf8x]{inputenc}
\usepackage{tabularx}
\usepackage{fixltx2e}
\usepackage{bpchem}
\usepackage{arydshln}
\usepackage{booktabs}
\usepackage{lscape}
%\usepackage[document]{ragged2e}


\usepackage{array}
\newcolumntype{L}[1]{>{\raggedright\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}
\newcolumntype{C}[1]{>{\centering\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}
\newcolumntype{R}[1]{>{\raggedleft\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}

\PrerenderUnicode {ô}
\makeindex

%% Define the colors
\definecolor{part1}{cmyk}{0.90,0.40,0.24,0.32}
\definecolor{part2}{cmyk}{0,0.54,0.96,0.10}
\definecolor{part3}{cmyk}{0.18,0.90,0.75,0.31}
\definecolor{part4}{cmyk}{0.73,0.10,0.97,0.29}
\definecolor{part5}{cmyk}{0,0,0,0.5}
\definecolor{part6}{cmyk}{0,0,0,0.5}


%% Set the strip width
\faoset{stripwidth=7.2mm}

%% Trying to control the TOC
% \usepackage{tocloft}
% \renewcommand\cftchapfont{\normalsize\bfseries}
% \renewcommand\cftsecfont{\normalsize}

%\usepackage{titlesec}
% \titleformat*{\section}{\Large\bfseries}


% First page background graphics
\usepackage{eso-pic}
\newcommand\taustaeka{%
\put(0,0){%
\parbox[b][\paperheight]{\paperwidth}{%
\vfill
\centering
\includegraphics[width=\paperwidth,height=\paperheight,%
<<define_front_cover, echo=FALSE, results='asis', eval=TRUE>>=
  cover_name <- paste0("front_cover_",region_to_report,".pdf")
  cat(paste0("keepaspectratio]{",cover_name,"}"))
  @
\vfill
}}}


\newcommand\taustatoka{%
\put(0,0){%
\parbox[b][\paperheight]{\paperwidth}{%
\vfill
\centering
\includegraphics[width=\paperwidth,height=\paperheight,%
<<define_back_cover, echo=FALSE, results='asis', eval=TRUE>>=
  cover_name <- paste0("back_cover_",region_to_report,".pdf")
  cat(paste0("keepaspectratio]{",cover_name,"}"))
  @
\vfill
}}}


% 
%    __                     _                       _    _              
%   / _| _ __  ___   _ __  | |_   _ __ ___    __ _ | |_ | |_  ___  _ __ 
%  | |_ | '__|/ _ \ | '_ \ | __| | '_ ` _ \  / _` || __|| __|/ _ \| '__|
%  |  _|| |  | (_) || | | || |_  | | | | | || (_| || |_ | |_|  __/| |   
%  |_|  |_|   \___/ |_| |_| \__| |_| |_| |_| \__,_| \__| \__|\___||_|   
%                                                                       

      


\begin{document}
\faoset{bgcolor=white}\selectcolor
\twocolumn


%% Cover (just in the web version)
\ifprint\addtocounter{page}{1}\else
% \begin{picture}(0,0)
% \put(-28,-502){\includegraphics[width=\paperwidth,height=\paperheight]{./cover/front_cover_2015.png}}
% \end{picture}
% \input{./Tables/CountryProfiles.tex}

% \newpage

\AddToShipoutPicture*{\taustaeka}

% \thispagestyle{empty}
% \mbox{}
% \clearpage
\newpage
\thispagestyle{empty}
\mbox{}
\clearpage
\fi

\onecolumn
% \pagenumbering{roman}
\thispagestyle{empty}

\vspace*{100pt}

\begin{center}
\Huge{FAO Statistical Pocketbook}
\end{center}

\vspace*{10pt}

\begin{center}
\Huge{2015}
\end{center}

\vspace*{10pt}

\begin{center}
<<define_subtitle, echo=FALSE, results='asis', eval=TRUE>>=
  
if (region_to_report == "RAF") subtitle <- "Africa \n\n Food and Agriculture"
if (region_to_report == "RAP") subtitle <- "Asia and the Pacific \n\n Food and Agriculture"
if (region_to_report == "REU") subtitle <- "Europe and Central Asia \n\n Food and Agriculture"
if (region_to_report == "RNE") subtitle <- "Near East and North Africa \n\n Food and Agriculture"
if (region_to_report == "COF") subtitle <- "Coffee and Coffee \n\n and Coffee"
if (region_to_report == "GLO") subtitle <- ""

  cat(paste0("\\Huge{",subtitle,"}"))
  @

\end{center}

\vfill
\begin{center}
Food and Agriculture Organization of the United Nations, Rome, 2015
\end{center}

\Huge{Generated at} \\ 
\Sexpr{Sys.time()}

\newpage

%% Disclamer
\thispagestyle{empty}
\ifprint
\includepdf[width=\paperwidth,height=\paperheight, offset=-30 -100]{./I4691E_disclaimer.pdf}
\else
\includepdf[width=\paperwidth,height=\paperheight, offset=-10 -50]{./I4691E_disclaimer.pdf}
\fi


%% To be commented if we want to show the List of countries
% \thispagestyle{empty}
% \mbox{}
% \clearpage

%% New part - Introduction
\newpart{white}
%\addtocounter{page}{1}
%\cleardoublepage
\pagenumbering{arabic}  %% Arabic page numbering
\setlength{\parskip}{3pt plus 3pt minus 1pt}  %% Increasing the spacing in the introduction page



% 
%    __                                             _ 
%   / _|  ___   _ __  ___ __      __ ___   _ __  __| |
%  | |_  / _ \ | '__|/ _ \\ \ /\ / // _ \ | '__|/ _` |
%  |  _|| (_) || |  |  __/ \ V  V /| (_) || |  | (_| |
%  |_|   \___/ |_|   \___|  \_/\_/  \___/ |_|   \__,_|
%                                                     
% 



\Large{Foreword}

\bigskip
\bigskip
\bigskip

\large

This year, 2015, is a pivotal one as we look back on the progress we have made on the development agenda, and forward on what we must still accomplish. 

This is the end of a 15-year cycle where the international community partnered with developing countries to tackle the Millennium Development Goals. We are now taking stock of what we can learn from that effort. For example we know that the commitment to halve the percentage of hungry people, that is, to reach the MDG 1c target, has been almost met at the global level. Indeed, 72 of the 129 countries monitored for progress have reached that MDG target, while 29 of them also reached the more ambitious WFS goal by at least halving the number of undernourished people in their populations. 

This year also marks the beginning of the new post-2015 Sustainable Development Agenda. Again the international community will unite around new priorities for the future.

Clear indicators to measure progress towards these international goals is of paramount importance. Timely and robust statistics are the fundamental tool in monitoring the myriad efforts being made, both with an eye to early detection of problems and the recognition of success. The better the data, the better the policies that can be designed. And the better the data, the easier it is to measure the impact of policies or to hold stakeholders accountable for the pledges they make. 

This publication presents selected key indicators related to agriculture and food security that stakeholders can use to prioritize their actions. It is divided into two main sections, one thematic and one country-specific. It presents a variety of dimensions of agriculture and food security along four main focus areas:


{\textbf{\color{part1} The setting}} measures the state of the agricultural resource base by assessing the supply of land, labour, capital and inputs, and examining the pressure on the world food system stemming from demographic and macroeconomic change.

{\textbf{\color{part2} Hunger dimensions}} gauges the state of food insecurity and malnutrition, and highlights the four dimensions – availability, access, stability and utilization – that determine the scale of hunger and the shape of undernourishment.

{\textbf{\color{part3} Food supply}} evaluates the past and present productive capacity of world agriculture, together with the role of trade, in meeting the world’s demand for food, feed and other products.

{\textbf{\color{part4} Environment}} examines the sustainability of agriculture in the context of the pressure it exerts on its ecological surroundings, including the interaction of agriculture with climate change.

This Pocketbook is part of the FAO Statistical Yearbook suite of products and is just one of the tools that can be used as building blocks for monitoring progress and formulating policy. It includes data from FAOSTAT as well as from other partners within the organization and in the international community. 

FAO is deeply committed to helping countries strengthen their statistical systems to improve the timeliness and quality of their data. And it will continue to do so through the SDG process.


\bigskip
\bigskip

\hspace*{\fill}
        Pietro Gennari
\hspace*{\fill}

\hspace*{\fill}
        \textit{Chief Statistician and Director, Statistics Division}
\hspace*{\fill}




% 
%   _          _      _                 __                      _                _   
%  | |_  __ _ | |__  | |  ___    ___   / _|   ___  ___   _ __  | |_  ___  _ __  | |_ 
%  | __|/ _` || '_ \ | | / _ \  / _ \ | |_   / __|/ _ \ | '_ \ | __|/ _ \| '_ \ | __|
%  | |_| (_| || |_) || ||  __/ | (_) ||  _| | (__| (_) || | | || |_|  __/| | | || |_ 
%   \__|\__,_||_.__/ |_| \___|  \___/ |_|    \___|\___/ |_| |_| \__|\___||_| |_| \__|
%                                                                                    
% 
% 


%% Prelims
\tableofcontents
% \clearpage % commented because of the font size issue

% \clearpage

%% List of countries
% \phantomsection
% \renewcommand{\indexname}{List of countries} 
% \addcontentsline{toc}{section}{List of countries}
% \printindex

% %%% List of tables
% \phantomsection
% \addcontentsline{toc}{section}{List of Tables}
% \listoftables

% %%% List of figrues
% \phantomsection
% \addcontentsline{toc}{section}{List of Charts}
% \listoffigures

% \thispagestyle{empty}
% \mbox{}

% \newpage



%   _         _                    _               _    _               
%  (_) _ __  | |_  _ __  ___    __| | _   _   ___ | |_ (_)  ___   _ __  
%  | || '_ \ | __|| '__|/ _ \  / _` || | | | / __|| __|| | / _ \ | '_ \ 
%  | || | | || |_ | |  | (_) || (_| || |_| || (__ | |_ | || (_) || | | |
%  |_||_| |_| \__||_|   \___/  \__,_| \__,_| \___| \__||_| \___/ |_| |_|
%                                                                       



% \section{Introduction}

% \bigskip
% \bigskip

% Overcoming malnutrition in all of its forms – caloric undernourishment, micronutrient deficiencies and obesity – requires a combination of interventions in different areas that guarantee the availability of and access to healthy diets. Among the key areas, interventions are required in food systems, public health systems and the provision of safe water and sanitation. This pocketbook not only focuses on indicators of food security and nutritional outcomes but also on the determinants that contribute to healthy lives. 

% The pocketbook is structured in two sections: 
% \begin{itemize}
% \item Thematic spreads related to food security and nutrition, including detailed food consumption data collected from national household budget surveys,
% \item Comprehensive country and regional profiles with indicators categorized by anthropometry, nutritional deficiencies, supplementation, dietary energy supplies, preceded by their "setting".
% \end{itemize}

% \textit{The setting} provides demographic indicators as well as health status indicators based on mortality patterns and the provision of safe water and sanitation. 

% \textit{Anthropometry} indicators provide information not only on the prevalence of acute and chronic forms of under-nutrition but also on the prevalence of obesity. Their co-existence is often referred to as the double burden of malnutrition. 

% \textit{Nutritional deficiency} indicators reveal food security issues at the national level based on the adequacy of energy supplies; they also reveal the prevalence of micronutrient deficiencies, often referred to as “hidden hunger”. Combined with anthropometric measurements, they allow for the identification of the triple burden of malnutrition (under-nutrition, obesity and hidden hunger). Regarding hidden hunger, indicators concerning iodine and vitamin A have been selected.

% \textit{Dietary} indicators are based on national food supplies and inform on the overall quality of diets. Focus is also on the importance of diets during the first 1\,000 days of an infant’s life, with indicators selected on the quality of breastfeeding, dietary diversity and meal frequency. 

% The choice of indicators was guided by the following criteria: relevance to health, food security and nutrition, comparability over time, and availability, in particular for low-income countries. But the criteria were relaxed for several indicators given their importance and the lack of available substitutes. It is hoped that the presence of data gaps will bring about greater efforts to collect the necessary information because only with timely and reliable data can interventions be designed and targeted towards those in most need. Wherever available, disaggregated data by gender have been provided. Such data are indeed key to mainstreaming gender in policies and programmes.

\clearpage

<<overview_map, eval=TRUE, fig.width=12, fig.height= 8 ,out.width="1.7\\columnwidth", out.extra='angle=90', fig.cap="Regions and countries in the book">>=

#<<overview_map, eval=print_overview_map, fig.width=map.fig.width, fig.height= map.fig.height ,out.width=map.out.width, out.height=map.out.height, out.extra=map.out.extra, fig.cap="Regions and countries in the book">>=

the_whole   <- map.df # for mapping the grey areas

df <- subgrouping(region_to_report = region_to_report)

# merge data with the region info
overview.df <- merge(map.df,df[c("FAOST_CODE","subgroup")],by="FAOST_CODE")
overview.df <- arrange(overview.df, order)

# define map unit
map_unit <- ""

# graticule
grat_robin <- spTransform(graticule, CRS("+proj=robin"))  # reproject graticule
gr_rob <- fortify(grat_robin)


source(paste0(root.dir,'./input/code/plot/plot_color.R'))

syb_part <- 1

## Part 1
colPart1 <- plot_colors(part = syb_part, 12)
col.main1 <- colPart1[["Main"]][1]
## color for the grid
col.main2 <- colPart1[["Main"]][2]

source(paste0(root.dir,"./input/code/plot/theme.R"))

# Create the plot
p <- ggplot(data=overview.df, aes(long,lat,group=group))
#  ---- grid below the countries ------------------------
p <- p + geom_path(data = gr_rob, aes(long, lat, group = group, fill = NULL), 
              linetype = "solid", color = col.main2, alpha=.1)
# Grey for the non-data regions
p <- p + geom_polygon(data=the_whole, fill="grey80", colour = alpha("white", 1/2), size=.4, guide = FALSE)
p <- p + geom_polygon(aes(fill = subgroup), colour = NA)
p <- p + geom_polygon(fill=NA,colour = alpha("white", 1/2), size=.4, guide = FALSE)
p <- p + scale_fill_manual(values=plot_colors(part = syb_part, length(unique(overview.df$subgroup)))[["Sub"]])
#p <- p + geom_text(data=cnames, aes(long, lat, label = ADM0_NAME, group=ADM0_NAME), size=2, color="black")

p <- p + theme(legend.position = c(0.05,0.05), 
                          legend.justification=c(0,0),
                          legend.key.size=unit(6,'mm'),
                          legend.direction = "vertical",
                          legend.background=element_rect(colour=NA, fill=alpha("white", 1/3)),
                          #legend.background=element_rect(colour=NA, fill=NA),
                          legend.text=element_text(size=12), 
                          legend.title=element_text(size=12), 
                          title=element_text(size=16), 
                          panel.background = element_blank(), 
                          plot.background = element_blank(),
                          panel.grid.minor = element_blank(),
                          panel.grid.major = element_blank(),
                          axis.text = element_blank(), 
                          axis.title = element_blank(), 
                          axis.ticks = element_blank())
p <- p + guides(fill = guide_legend(title = map_unit, family="PT Sans",
                                     title.position = "top", 
                                     title.hjust=0))
p <- p + guides(colour=FALSE)
p

@


\clearpage
%\begin{landscape}

<<overview_table, eval=TRUE, results='asis'>>=

# Add region key and subset
if (region_to_report == "RAF"){
  overview.df <- overview.df[which(overview.df$RAF),]
}
if (region_to_report == "RAP") {
  overview.df <- overview.df[which(overview.df$RAP),]
}
if (region_to_report == "REU"){
  overview.df <- overview.df[which(overview.df$REU),]
} 
if (region_to_report == "RNE"){
  overview.df <- overview.df[which(overview.df$RNE),]
  
}
if (region_to_report == "GLO") overview.df <- overview.df; overview.df <- overview.df[!is.na(overview.df$subgroup),]
if (region_to_report == "COF") overview.df <- overview.df

if(length(unique(overview.df$subgroup)) >= 6) cat(paste("\\begin{landscape}"))

df <- overview.df[!duplicated(overview.df[c("SHORT_NAME")]),]
df <- df[c("SHORT_NAME","subgroup")]
tbl <- spread(df, subgroup, SHORT_NAME)

overview_data <- data.frame(colx = rep("FAO", 284))
for (col in 1:ncol(tbl)){
  vector <- tbl[[col]][!is.na(tbl[[col]])]
  vector <- sort(vector)
  if (length(vector) < 284) vector <- c(vector, rep("empty", (284-length(vector))))
  vector <- as.data.frame(vector)
  overview_data <- bind_cols(overview_data,vector)
  names(overview_data)[col+1] <- names(tbl)[col]
}
overview_data$colx <- NULL

for (col in 1:ncol(overview_data)){
  overview_data[[col]][overview_data[[col]] %in% "empty"] <- NA
}
overview_data <- overview_data[rowSums(is.na(overview_data))!=ncol(overview_data), ]
# 

library(xtable)
rws <- seq(0, (nrow(overview_data)), by = 2)
col <- rep("\\rowcolor[gray]{0.95}", length(rws))
bold <- function(x) {paste('{\\textbf{',x,'}}', sep ='')}

if(length(unique(overview.df$subgroup)) == 2) alignment <- "lp{1.1in}p{1.1in}"
if(length(unique(overview.df$subgroup)) == 3) alignment <- "lp{.9in}p{.9in}p{.9in}"
if(length(unique(overview.df$subgroup)) == 4) alignment <- "lp{.7in}p{.7in}p{.7in}p{.7in}"
if(length(unique(overview.df$subgroup)) == 5) alignment <- "lp{.5in}p{.6in}p{.5in}p{.5in}p{.5in}"
if(length(unique(overview.df$subgroup)) == 6) alignment <- "lp{.6in}p{.6in}p{.6in}p{.6in}p{.6in}p{.6in}"
if(length(unique(overview.df$subgroup)) == 7) alignment <- "lp{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}"
if(length(unique(overview.df$subgroup)) == 8) alignment <- "lp{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}"
if(length(unique(overview.df$subgroup)) == 9) alignment <- "lp{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}"
if(length(unique(overview.df$subgroup)) == 10) alignment <- "lp{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}"
if(length(unique(overview.df$subgroup)) == 11) alignment <- "lp{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}"
if(length(unique(overview.df$subgroup)) == 12) alignment <- "lp{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}p{.5in}"

print(
  xtable(overview_data, caption = "Countries included", 
         align= alignment), 
  type = "latex", table.placement = NULL, 
  booktabs = TRUE, 
  include.rownames = FALSE, 
  size = "scriptsize", 
  caption.placement = "top", 
  add.to.row = list(pos = as.list(rws), command = col),
  sanitize.colnames.function=bold
  )

if(length(unique(overview.df$subgroup)) >= 6) cat(paste("\\end{landscape}"))
@




%\end{landscape}

\setlength{\parskip}{0pt}  %% Restoring the normal spacing

\normalsize

\makeatletter\clearpage\ifodd\c@page\hbox{}\newpage\fi\makeatother %% Remove the colored strip from the introduction page




%   ____               _     _ 
%  |  _ \  __ _  _ __ | |_  / |
%  | |_) |/ _` || '__|| __| | |
%  |  __/| (_| || |   | |_  | |
%  |_|    \__,_||_|    \__| |_|
%                              


%% PART1 - The Setting
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpart{part1}
\rowcolors{1}{part1!10}{white}
\clearpage

<<part1, child = if (include_part1) 'syb_part1.Rnw'>>=
@




%   ____               _     ____  
%  |  _ \  __ _  _ __ | |_  |___ \ 
%  | |_) |/ _` || '__|| __|   __) |
%  |  __/| (_| || |   | |_   / __/ 
%  |_|    \__,_||_|    \__| |_____|
%                                  



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% PART2 - Hunger dimensions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpart{part2}
\rowcolors{1}{part2!10}{white}
\clearpage

<<part2, child = if (include_part2) 'syb_part2.Rnw'>>=
@




%   ____               _     _____ 
%  |  _ \  __ _  _ __ | |_  |___ / 
%  | |_) |/ _` || '__|| __|   |_ \ 
%  |  __/| (_| || |   | |_   ___) |
%  |_|    \__,_||_|    \__| |____/ 
%                                  



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% PART3 - Food Supply
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpart{part3}
\rowcolors{1}{part3!10}{white}
\clearpage

<<part3, child = if (include_part3) 'syb_part3.Rnw'>>=
@




%   ____               _     _  _   
%  |  _ \  __ _  _ __ | |_  | || |  
%  | |_) |/ _` || '__|| __| | || |_ 
%  |  __/| (_| || |   | |_  |__   _|
%  |_|    \__,_||_|    \__|    |_|  
%                                   


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% PART4 - Sustainability dimensions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpart{part4}
\rowcolors{1}{part4!10}{white}
\clearpage

<<part4, child = if (include_part4) 'syb_part4.Rnw'>>=
@


% 
%    ____                      _                  ____                __  _  _            
%   / ___| ___   _   _  _ __  | |_  _ __  _   _  |  _ \  _ __  ___   / _|(_)| |  ___  ___ 
%  | |    / _ \ | | | || '_ \ | __|| '__|| | | | | |_) || '__|/ _ \ | |_ | || | / _ \/ __|
%  | |___| (_) || |_| || | | || |_ | |   | |_| | |  __/ | |  | (_) ||  _|| || ||  __/\__ \
%   \____|\___/  \__,_||_| |_| \__||_|    \__, | |_|    |_|   \___/ |_|  |_||_| \___||___/
%                                         |___/                                           
% 


<<country_profiles, child = if (include_country_profiles) 'syb_country_profiles.Rnw'>>=
@




%   __  __        _              _         _         
%  |  \/  |  ___ | |_  __ _   __| |  __ _ | |_  __ _ 
%  | |\/| | / _ \| __|/ _` | / _` | / _` || __|/ _` |
%  | |  | ||  __/| |_| (_| || (_| || (_| || |_| (_| |
%  |_|  |_| \___| \__|\__,_| \__,_| \__,_| \__|\__,_|
%                                                    
% 


<<metadata, child = if (include_metadata) 'metadata.Rnw'>>=
@





%   ____                _                                
%  | __ )   __ _   ___ | | __ ___  ___ __   __ ___  _ __ 
%  |  _ \  / _` | / __|| |/ // __|/ _ \\ \ / // _ \| '__|
%  | |_) || (_| || (__ |   <| (__| (_) |\ V /|  __/| |   
%  |____/  \__,_| \___||_|\_\\___|\___/  \_/  \___||_|   
%                                                        



\newpage

\thispagestyle{empty}
\AddToShipoutPicture*{\taustatoka}

\mbox{}

\ifprint\else
\begin{picture}(0,0)


%\put(-58,-472){\includegraphics[width=\paperwidth,height=\paperheight]{back_cover_2015.png}}
%\put(-58,-432){\includegraphics[width=\paperwidth,height=\paperheight]{./cover/back_cover.pdf}}
%\includegraphics[width=\paperwidth,height=\paperheight]{./cover/back_cover_2015.png}
\end{picture}

\newpage

\thispagestyle{empty}

\newpage

\fi

\end{document}
